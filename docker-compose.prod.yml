version: '3.7'

services:
    # サービス名は自由に設定
    django:
        build:
            # 読み込むファイル名が`Dockerfile`ではない場合contextに相対パス、dockerfileにファイル名を記載
            context: ./server/app
            dockerfile: Dockerfile.prod
        # サービス起動後に入力されるコマンドを設定
        command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
        # データを永続化させる場合の設定。`host:container`でパスを記載
        volumes:
            - static_volume:/usr/src/app/static
        # 指定されたポートは接続されたサービスからアクセス可能
        expose:
            - 8000
        # 環境変数を指定
        env_file: ./server/.env
        # 接続するサービスを指定
        depends_on:
            - postgres
            - mongo
            - mysql
            - redis
        networks:
            - db_net

    # vue:
    #     build:
    #         context: ./vue
    #     command: 'npm run serve'
    #     volumes:
    #         - ./vue/favolyric:/app
    #         - ./vue/favolyric/node_modules:/app/node_modules
    #     ports:
    #         - 8080:8080
    client:
        build:
            context: ./client
            dockerfile: Dockerfile.prod
        volumes:
            - ./client:/app
        expose:
            - 8080
        ports:
            - 8080:8080

    postgres:
        # 公式からイメージをpull
        image: postgres:11.4-alpine
        # データベースの永続化
        volumes:
            - postgres_data:/var/lib/postgresql/data
        env_file: ./server/.env.db
        networks:
            - db_net

    mysql:
        image: mysql:5.7
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: aabbccdd1239
            MYSQL_DATABASE: django
            MYSQL_USER: docker
            MYSQL_PASSWORD: docker
            TZ: 'Asia/Tokyo'
        volumes:
            - ./server/mysql/data:/var/lib/mysql
            - ./server/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
            - ./server/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - ./server/logs:/var/log/mysql
        ports:
            - 3306:3306
        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
        networks:
            - db_net
        expose:
            - "3306"

    redis:
        image: "redis:latest"
        ports:
            - 6379:6379
        command: redis-server --appendonly yes --requirepass redis2019!
        volumes:
            - ./server/redis/data:/data
        networks:
            - db_net

    mongo:
        image: mongo:3.4.2
        restart: always
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=MongoDB2019!
            - MONGO_INITDB_DATABASE=music
        ports:
            - 27017:27017
        restart: unless-stopped
        command: mongod --auth
        volumes:
            - ./server/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        networks:
            - db_net

    mongo-express:
        image: mongo-express
        ports:
            - 8082:8081
        environment:
            ME_CONFIG_BASICAUTH_USERNAME: admin
            ME_CONFIG_BASICAUTH_PASSWORD: password
            ME_CONFIG_MONGODB_PORT: 27017
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
        depends_on:
            - mongo
        networks:
            - db_net

    nginx:
        build: ./server/nginx
        environment:
            TZ: 'Asia/Tokyo'
        volumes:
            - ./server/nginx/logs:/var/log/nginx/
            - static_volume:/usr/src/app/static
        ports:
            - 1337:80
        depends_on:
            - django
        networks:
            - db_net

networks:
    db_net:
        external: true

# トップレベルに書く「名前付きvolumes」は複数サービスから参照できる
volumes:
    postgres_data:
    static_volume:
